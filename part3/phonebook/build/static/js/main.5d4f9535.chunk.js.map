{"version":3,"sources":["components/Person.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/service.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","Filter","onChange","value","PersonForm","addPerson","onNameChange","newName","onNumberChange","newNumber","onSubmit","type","Notification","message","state","console","log","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","newSearch","setNewSearch","setMessage","successfulNoti","setSuccessfulNoti","useEffect","service","window","confirm","filter","n","setTimeout","event","preventDefault","target","some","replacePerson","find","updatedNumber","map","p","catch","error","newPerson","concat","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d4f9535.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n    return (\r\n        <div>\r\n            {person.name} {person.number} <button onClick={() => deletePerson(person)}>del</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person\r\n","import React from \"react\";\r\n\r\nconst Filter = ({onChange, value}) => {\r\n  return (\r\n    <div>\r\n      <div>filter shown with</div>\r\n      <input onChange={onChange} value={value} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({addPerson, onNameChange, newName, onNumberChange, newNumber}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input onChange={onNameChange} value={newName} />\r\n      </div>\r\n      <div>\r\n        number: <input onChange={onNumberChange} value={newNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, state }) => {\r\n  if (message === null) {\r\n    console.log(`mess: ${message}`);\r\n    return null;\r\n  }\r\n  if (state) {\r\n    return <div className=\"noti\">{message}</div>;\r\n  } else {\r\n    return <div className=\"badnoti\">{message}</div>;\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst del = (id) => {\r\n    axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  del,\r\n};","import React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Notification from \"./components/Notification\";\nimport service from \"./services/service\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newSearch, setNewSearch] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [successfulNoti, setSuccessfulNoti] = useState(true);\n  //get all\n  useEffect(() => {\n    service.getAll().then((persons) => {\n      setPersons(persons);\n    });\n  }, []);\n  //add\n  const addPerson = (event) => {\n    event.preventDefault();\n    //check existing name\n    if (persons.some((person) => newName === person.name)) {\n      const replace = window.confirm(\n        `${newName} is already added, replace the number instead?`\n      );\n      if (replace) {\n        //find the person that needs replace, then change number\n        const replacePerson = persons.find((person) => person.name === newName);\n        const updatedNumber = { ...replacePerson, number: newNumber };\n        service\n          .update(replacePerson.id, updatedNumber)\n          .then((person) => {\n            setPersons(\n              persons.map((p) =>\n                p.id === replacePerson.id ? updatedNumber : p\n              )\n            );\n            setSuccessfulNoti(true);\n            setMessage(`${updatedNumber.name}'s number updated`);\n            setTimeout(() => {\n              setMessage(null);\n            }, 3000);\n          })\n          .catch((error) => {\n            setSuccessfulNoti(false);\n\n            setMessage(`${newName} was already removed from the server`);\n            setTimeout(() => {\n              setMessage(null);\n            }, 3000);\n            setPersons(persons.filter((n) => n.id !== replacePerson.id));\n          });\n      }\n      return;\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      };\n\n      service.create(newPerson).then((newPerson) => {\n        setPersons(persons.concat(newPerson));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setSuccessfulNoti(true);\n\n        setMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n  //delete\n  const deletePerson = (person) => {\n    const confirm = window.confirm(\"Are you sure to delete this person?\");\n    if (confirm) {\n      service.del(person.id);\n      setPersons(persons.filter((n) => n.id !== person.id));\n      setSuccessfulNoti(true);\n      setMessage(`${person.name} deleted`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  //input handling\n  const onNameChange = (event) => {\n    event.preventDefault();\n    setNewName(event.target.value);\n  };\n  const onNumberChange = (event) => {\n    event.preventDefault();\n    setNewNumber(event.target.value);\n  };\n  const onSearchChange = (event) => {\n    event.preventDefault();\n    setNewSearch(event.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} state={successfulNoti} />\n      <Filter onChange={onSearchChange} value={newSearch} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        onNameChange={onNameChange}\n        newName={newName}\n        onNumberChange={onNumberChange}\n        newNumber={newNumber}\n      />\n\n      <h2>Numbers</h2>\n      {persons.map((person) =>\n        person.name.toLowerCase().includes(newSearch.toLowerCase()) ? (\n          <Person\n            key={person.name}\n            person={person}\n            deletePerson={deletePerson}\n          />\n        ) : (\n          \"\"\n        )\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}